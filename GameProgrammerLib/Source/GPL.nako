!`KeyCode.nako`を取り込む。
!`GL.nako`を取り込む。
!`TIL.nako`を取り込む。
!`CMFL.nako`を取り込む


#デバッグコード
!GPL_DEBUG = 1

もし、GPL_DEBUGならば、
	GAMEをSampleMyGameとして作成
	
	#ゲームインスタンスをw,h,colorで初期化する。
	GAME→Init(600,480,$ff0000)
	
	#ゲームインスタンスを開始する。
	GAME→Start()
	
	#GAME_g→Main()に処理内容をオーバーライドすることで実行する（抽象メソッド）
	
	
	終了


#-----------------------------------------------------------------------


■Size_g
	・w
	・h

■GAME_g
	・{Vector_g}_screenXY
	・{Size_g}_screenWH
	・_screencolor
	・_ExitKey{=27}
	・UserInit()〜
		#抽象メソッド
		#GPLInit()が呼び出された最後に実行されます、その為GPLの機能を全て使うことができます。
		戻る
	・Init({参照渡し}W,{参照渡し}H,{参照渡し}color)〜
		もし、W*H < 1ならば、
			`スクリーンは1px未満に設定できません。`でエラー発生
		GPLInit()
		
		_screenWH→w = W
		_screenWH→h = H
		もし、母艦のスタイル==`枠なし`ならば、
			母艦のW = W
			母艦のH = H
		違えば、
			母艦のCW = W
			母艦のCH = H
		
		GPLBufferScreenParam(0,0,W,H,color)
		
		_screencolor = color
		もし、color!=0 && color!=16777215ならば、
			BufferScreen→InitUserColor(color)
		自身→UserInit()
		戻る
	・{Fpsadjuster}_fps
	・SetFps(val)〜
		_fps→SetFPS(val)
	・Start()〜
		(キー状態(KEY_ESC)==0)間
			もし、_screencolor == 0ならば、
				BufferScreen→BlackClear()
			違えばもし、_screencolor == 16777215ならば、
				BufferScreen→WhiteClear()
			違えば、
				BufferScreen→UserClear()
			自身→Main()
			BufferScreen→Flip()
			母艦再描画()
			_fps→Fix()
			
		ここまで
	・Main()〜
		#抽象メソッド
		#使用する際にこのメソッドを上書きして使って下さい。
		戻る


#-----------------------------------------------------------------------

/* 継承サンプル *
 *
 * UserInit()とMain()は抽象メソッドのため、GAME_gのメソッドをオーバーライドします。
 * UserInitはGAME_gのInitの終了後1度だけ、MainはStart内部で繰り返し実行されます。
*/

■SampleMyGame + GAME_g
	・UserInit()〜
		AをGraphic_gとして作成
		A→Load(`Magicsquare_b.bmp`)
		A→x =10
		
	・Main()〜
		P(A→x)
		A→Draw()
